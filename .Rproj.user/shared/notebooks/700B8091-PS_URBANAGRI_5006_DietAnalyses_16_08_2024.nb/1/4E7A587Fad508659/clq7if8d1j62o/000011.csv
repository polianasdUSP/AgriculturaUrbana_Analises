"0","# Inicializa um dataframe vazio para armazenar os residuais"
"0","recall.calc.residuals <- data.frame(matrix(nrow = nrow(recall.calc), ncol = 0))"
"0",""
"0","# Extrai a variável preditora (energia1_kJ)"
"0","predictor <- recall.calc$energia1_kJ"
"0",""
"0","# Loop por todas as colunas em recall.calc"
"0","for (colname in colnames(recall.calc)) {"
"0","  # Ignora a coluna preditora"
"0","  if (colname != ""energia1_kJ"") {"
"0","    # Verifica se a coluna é numérica"
"0","    if (is.numeric(recall.calc[[colname]])) {"
"0","      # Verifica se a coluna tem variabilidade"
"0","      col_var <- var(recall.calc[[colname]], na.rm = TRUE)"
"0","      if (!is.na(col_var) && col_var > 0) {"
"0","        # Realiza a regressão linear"
"0","        model <- lm(recall.calc[[colname]] ~ predictor, data = recall.calc)"
"0","        "
"0","        # Extrai os residuais"
"0","        residuals <- resid(model)"
"0","        "
"0","        # Adiciona os residuais ao novo dataframe"
"0","        recall.calc.residuals[[paste0(""residual_"", colname)]] <- residuals"
"0","      } else {"
"0","        # Preenche com zeros ou NA se a coluna for constante"
"0","        recall.calc.residuals[[paste0(""residual_"", colname)]] <- 0"
"0","        message(""A coluna "", colname, "" é constante e foi preenchida com 0."")"
"0","      }"
"0","    } else {"
"0","      # Se a coluna não for numérica, preenche com NA"
"0","      recall.calc.residuals[[paste0(""residual_"", colname)]] <- NA"
"0","      message(""A coluna "", colname, "" não é numérica e foi ignorada."")"
"0","    }"
"0","  }"
"0","}"
"2","A coluna IdVoluntario não é numérica e foi ignorada.
"
"0","# Exibe o dataframe de residuais"
"0","print(recall.calc.residuals)"
